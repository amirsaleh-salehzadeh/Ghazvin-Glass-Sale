/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package ams.ggc.struts;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.io.Writer;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import ams.ggc.common.*;
import ams.ggc.common.User.CompanyUserENT;
import ams.ggc.common.User.RealUserENT;
import ams.ggc.common.User.UserDAOInterface;
import ams.ggc.common.User.UserENT;
import ams.ggc.common.User.UserPassword;
import ams.ggc.common.product.ProductDAOInterface;
import ams.ggc.common.product.ProductENT;
import ams.ggc.common.product.ProductLST;
import ams.ggc.common.tools.AMSException;
import ams.ggc.common.tools.NVL;


/** 
 * MyEclipse Struts
 * Creation date: 09-21-2010
 * 
 * XDoclet definition:
 * @struts.action parameter="reqCode" validate="true"
 * @struts.action-forward name="list" path="/jsp/farsi/news/newsList.jsp"
 */
public class ProductAction extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		ActionForward af = null;
		String reqCode=request.getParameter("reqCode");
		String error = "";
		String success = "";
		if("save".equalsIgnoreCase(reqCode)){
			ProductENT productENT = new ProductENT();
			productENT.setColor(request.getParameter("color"));
			productENT.setDescription(request.getParameter("description"));
			productENT.setName(request.getParameter("name"));
			productENT.setPrice(request.getParameter("price"));
			productENT.setThickness(NVL.getInteger(request.getParameter("thickness")));
			String v = request.getParameter("visibility");
			productENT.setVisibility(NVL.getBool(v));
			try {
				getDAO().saveProduct(productENT);
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			reqCode ="";
		}else if("delete".equalsIgnoreCase(reqCode)){
			try {
				getDAO().deleteProductENT(NVL.getInteger(request.getParameter("productId")));
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			reqCode ="";
		}if("".equalsIgnoreCase(reqCode)||"list".equalsIgnoreCase(reqCode)||reqCode == null){
			ProductLST lst = new ProductLST();
			lst.setCurrentPage(NVL.getInt(request.getParameter("page")));
			ProductLST productLST = new ProductLST();
			try {
				productLST = getDAO().getProductLST(lst);
			} catch (AMSException e) {
				e.printStackTrace();
			}
			request.setAttribute("productLST", productLST);
			af=mapping.findForward("list");
		}else if("new".equalsIgnoreCase(reqCode)){
			ProductENT productENT = new ProductENT();
			request.setAttribute("productENT", productENT);
			af = mapping.findForward("new");
		}else if("orderList".equalsIgnoreCase(reqCode)){
			ProductLST lst = new ProductLST();
			ProductLST productLST = new ProductLST();
			try {
				productLST = getDAO().getProductLST(lst);
			} catch (AMSException e) {
				e.printStackTrace();
			}
			request.setAttribute("productLST", productLST);
			af=mapping.findForward("orderList");
		}else if ("updateViewList".equalsIgnoreCase(reqCode)){
			String[] produString = request.getParameterValues("visibility");
		}
		return af;
	}
	private static ProductDAOInterface getDAO() {
		return ams.ggc.common.orm.SellDAOManager.getProductDAOInterface();
	}
}