/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package ams.ggc.struts;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.io.Writer;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import ams.ggc.common.*;
import ams.ggc.common.User.CompanyUserENT;
import ams.ggc.common.User.RealUserENT;
import ams.ggc.common.User.UserDAOInterface;
import ams.ggc.common.User.UserENT;
import ams.ggc.common.tools.AMSException;
import ams.ggc.common.tools.NVL;


/** 
 * MyEclipse Struts
 * Creation date: 09-21-2010
 * 
 * XDoclet definition:
 * @struts.action parameter="reqCode" validate="true"
 * @struts.action-forward name="list" path="/jsp/farsi/news/newsList.jsp"
 */
public class RegisterAction extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		ActionForward af = null;
		response.setContentType("text/html; charset=utf8");
		try {
			Writer out = response.getWriter();
		} catch (IOException e) {
			e.printStackTrace();
		}
		String reqCode=request.getParameter("reqCode");
		if("".equalsIgnoreCase(reqCode)||reqCode==null){
			UserENT userENT = new UserENT();
			request.setAttribute("userENT", userENT);
			af = mapping.findForward("registeration");
		}else if("save".equalsIgnoreCase(reqCode)){
			UserENT userENT = new UserENT();
			userENT = getUserENT(request);
			boolean insertResult = false;
			try {
				insertResult = getDAO().register(userENT, request.getParameter("type"));
			} catch (AMSException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			request.setAttribute("userENT", userENT);
			if(insertResult)
				af = mapping.findForward("registerationSuccess");
			else
				af = mapping.findForward("registeration");
		}else if("checkValidity".equalsIgnoreCase(reqCode)){
			UserENT userENT = new UserENT();
			userENT = getUserENT(request);
			request.setAttribute("availability", "isNotValid");
//			if(businessManager.checkUsernameValidity(userENT.getUserName())){
//				request.setAttribute("availability", "isValid");
//			}
			request.setAttribute("userENT", userENT);
			af = mapping.findForward("registeration");
		}
			return af;
	}
	public UserENT getUserENT(HttpServletRequest request){
		UserENT userENT = new UserENT();
		CompanyUserENT companyUserENT = new CompanyUserENT();
		RealUserENT realUserENT = new RealUserENT();
		userENT.setUserName(request.getParameter("userName"));
//		userENT.setPassword(request.getParameter("password"));
		if("real".equalsIgnoreCase(request.getParameter("type"))){
			realUserENT.setName(request.getParameter("realUserENT.name"));
			realUserENT.setAddress(request.getParameter("realUserENT.name"));
			realUserENT.setEmailAddress(request.getParameter("realUserENT.emailAddress"));
			realUserENT.setFamilyName(request.getParameter("realUserENT.familyName"));
			realUserENT.setNationalID(request.getParameter("realUserENT.nationalID"));
			realUserENT.setTel(request.getParameter("realUserENT.tel"));
			realUserENT.setFaxNo(request.getParameter("realUserENT.faxNo"));
			realUserENT.setWebSiteAddress(request.getParameter("realUserENT.webSiteAddress"));
			realUserENT.setAddress(request.getParameter("realUserENT.address"));
			realUserENT.setDob(request.getParameter("year")+"-"+request.getParameter("month")+"-"+request.getParameter("day"));
			realUserENT.setOccupation(request.getParameter("occupation"));
		}else{
			companyUserENT.setCompanyName(request.getParameter("companyUserENT.companyName"));
			companyUserENT.setEconomicNumber(request.getParameter("companyUserENT.economicNumber"));
			companyUserENT.setTel(request.getParameter("companyUserENT.tel"));
			companyUserENT.setFaxNo(request.getParameter("companyUserENT.faxNo"));
			companyUserENT.setWebSiteAddress(request.getParameter("companyUserENT.webSiteAddress"));
			companyUserENT.setEmailAddress(request.getParameter("companyUserENT.emailAddress"));
			companyUserENT.setAddress(request.getParameter("companyUserENT.address"));
		}
		userENT.setCompanyUserENT(companyUserENT);
		userENT.setRealUserENT(realUserENT);
		return userENT;
	}
	private static UserDAOInterface getDAO() {
		return ams.ggc.common.orm.SellDAOManager.getUserDAOInterface();
	}
}